{"ast":null,"code":"var _jsxFileName = \"/media/komal/New Volume/ReactJs_Programs/breaking-bad-characters/src/Components/Character-Design/CharacterItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CharacterItems = ({\n  item\n}) => {\n  _s();\n\n  // console.log(item.name)\n  const [quote, setQuote] = useState();\n  const [pageNumber, setPageNumber] = useState(0);\n  const userPerPage = 10;\n  const pageVisited = pageNumber * userPerPage;\n\n  const fetchItems = async () => {\n    const result = await axios(`https://www.breakingbadapi.com/api/quote?author=${item.name}`);\n    setQuote(result.data); // console.log(result.data+item)\n  };\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  useEffect(() => {\n    console.log(quote);\n  }, [quote]);\n  const display = item.slice(pageVisited, pageVisited + userPerPage).map(items => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-front\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: items.img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-back\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: items.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 15\n              }, this), \" \", items.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date of Birthday:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 15\n              }, this), \" \", items.birthday]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Occupation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 15\n              }, this), \" \", items.occupation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this), \" \", items.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Nickname:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, this), \" \", items.nickname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Portrays Actor:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 15\n              }, this), \" \", items.portrayed]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Seasons:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 15\n              }, this), \" \", items.appearance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Quotes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this), \" \", quote && quote.map(val => {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: val.quote\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n  });\n  const pageCount = Math.ceil(item.length / userPerPage);\n\n  const changePage = ({\n    selected\n  }) => {\n    setPageNumber(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [display, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Prevoius\",\n      nextLabel: \"Next\",\n      pageCount: pageCount,\n      onPageChange: changePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CharacterItems, \"aUSD5J+S0Wo6L9zh9s+Y6Jd8SCc=\");\n\n_c = CharacterItems;\nexport default CharacterItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterItems\");","map":{"version":3,"sources":["/media/komal/New Volume/ReactJs_Programs/breaking-bad-characters/src/Components/Character-Design/CharacterItems.js"],"names":["React","useState","useEffect","axios","ReactPaginate","CharacterItems","item","quote","setQuote","pageNumber","setPageNumber","userPerPage","pageVisited","fetchItems","result","name","data","console","log","display","slice","map","items","img","birthday","occupation","status","nickname","portrayed","appearance","val","pageCount","Math","ceil","length","changePage","selected"],"mappings":"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","sourcesContent":["import React,  { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\n\nconst CharacterItems = ({item}) => {\n  // console.log(item.name)\n    const [quote, setQuote] = useState();\n    const [pageNumber, setPageNumber] = useState(0);\n    \n    const userPerPage = 10;\n    const pageVisited = pageNumber*userPerPage;\n\n    const fetchItems = async () => {\n      const result = await axios(\n      `https://www.breakingbadapi.com/api/quote?author=${item.name}`\n    )\n\n    setQuote(result.data);\n    // console.log(result.data+item)\n    \n    \n    }\n\n    useEffect(() => {\n        \n    fetchItems();  \n  }, [])\n\n  useEffect (() => {\n    console.log(quote)\n  }, [quote] \n  )\n      \nconst display = item.slice(pageVisited, pageVisited + userPerPage).map((items) => {\n    return (\n        <div className='card'>\n      <div className='card-inner'>\n        <div className='card-front'>\n          <img src={items.img} alt='' />\n        </div>\n        <div className='card-back'>\n          <h1>{items.name}</h1>\n          <ul>\n            <li>\n              <strong>Name:</strong> {items.name}\n            </li>\n            <li>\n              <strong>Date of Birthday:</strong> {items.birthday}\n            </li>\n            <li>\n              <strong>Occupation:</strong> {items.occupation}\n            </li>\n            <li>\n              <strong>Status:</strong> {items.status}\n            </li>\n            <li>\n              <strong>Nickname:</strong> {items.nickname}\n            </li>\n            <li>\n              <strong>Portrays Actor:</strong> {items.portrayed}\n            </li>\n            <li>\n              <strong>Seasons:</strong> {items.appearance}\n            </li>\n            <li>\n              <strong>Quotes:</strong> {quote && quote.map((val) => {\n                return (\n                  <p>{val.quote}</p>\n                );\n              } )}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    );\n             } );\n    const pageCount = Math.ceil(item.length / userPerPage);\n    const changePage = ({ selected }) => \n    {\n        setPageNumber(selected);\n    }\n\n    return (\n      <>\n      {display}\n      <ReactPaginate \n        previousLabel = {\"Prevoius\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n      />\n</>\n    );\n}\n\nexport default CharacterItems;\n"]},"metadata":{},"sourceType":"module"}